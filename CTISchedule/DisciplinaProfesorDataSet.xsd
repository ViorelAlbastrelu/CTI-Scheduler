<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DisciplinaProfesorDataSet" targetNamespace="http://tempuri.org/DisciplinaProfesorDataSet.xsd" xmlns:mstns="http://tempuri.org/DisciplinaProfesorDataSet.xsd" xmlns="http://tempuri.org/DisciplinaProfesorDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="CTIScheduleDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="CTIScheduleDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.CTISchedule.Properties.Settings.GlobalReference.Default.CTIScheduleDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DisciplinaTableAdapter" GeneratorDataComponentClassName="DisciplinaTableAdapter" Name="Disciplina" UserDataComponentName="DisciplinaTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CTIScheduleDBConnectionString (Settings)" DbObjectName="CTIScheduleDB.dbo.Disciplina" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Disciplina] WHERE (([Id] = @Original_Id) AND ([An] = @Original_An) AND ([Nume] = @Original_Nume) AND ([Credite] = @Original_Credite))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_An" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="An" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Nume" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Nume" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Credite" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Credite" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Disciplina] ([An], [Nume], [Credite]) VALUES (@An, @Nume, @Credite);
SELECT Id, An, Nume, Credite FROM Disciplina WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@An" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="An" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Nume" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Nume" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Credite" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Credite" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, An, Nume, Credite FROM dbo.Disciplina</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Disciplina] SET [An] = @An, [Nume] = @Nume, [Credite] = @Credite WHERE (([Id] = @Original_Id) AND ([An] = @Original_An) AND ([Nume] = @Original_Nume) AND ([Credite] = @Original_Credite));
SELECT Id, An, Nume, Credite FROM Disciplina WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@An" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="An" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Nume" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Nume" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Credite" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Credite" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_An" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="An" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Nume" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Nume" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Credite" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Credite" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="CTIScheduleDB.dbo.Disciplina" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="An" DataSetColumn="An" />
              <Mapping SourceColumn="Nume" DataSetColumn="Nume" />
              <Mapping SourceColumn="Credite" DataSetColumn="Credite" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="CTIScheduleDBConnectionString (Settings)" DbObjectName="CTIScheduleDB.dbo.Disciplina" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT        Disciplina.Id, Disciplina.An, Disciplina.Nume, Disciplina.Credite
FROM            Disciplina INNER JOIN
                         DisciplinaProfesor ON Disciplina.Id = DisciplinaProfesor.Id_Disciplina INNER JOIN
                         Profesor ON DisciplinaProfesor.Id_Profesor = Profesor.Id</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DisciplinaProfesorTableAdapter" GeneratorDataComponentClassName="DisciplinaProfesorTableAdapter" Name="DisciplinaProfesor" UserDataComponentName="DisciplinaProfesorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CTIScheduleDBConnectionString (Settings)" DbObjectName="CTIScheduleDB.dbo.DisciplinaProfesor" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[DisciplinaProfesor] ([Id_Disciplina], [Id_Profesor]) VALUES (@Id_Disciplina, @Id_Profesor)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id_Disciplina" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Disciplina" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id_Profesor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_Profesor" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id_Disciplina, Id_Profesor FROM dbo.DisciplinaProfesor</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id_Disciplina" DataSetColumn="Id_Disciplina" />
              <Mapping SourceColumn="Id_Profesor" DataSetColumn="Id_Profesor" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProfesorTableAdapter" GeneratorDataComponentClassName="ProfesorTableAdapter" Name="Profesor" UserDataComponentName="ProfesorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CTIScheduleDBConnectionString (Settings)" DbObjectName="CTIScheduleDB.dbo.Profesor" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Profesor] WHERE (([Id] = @Original_Id) AND ([Nume] = @Original_Nume) AND ([Prenume] = @Original_Prenume))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Nume" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Nume" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Prenume" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Prenume" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Profesor] ([Nume], [Prenume]) VALUES (@Nume, @Prenume);
SELECT Id, Nume, Prenume FROM Profesor WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Nume" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Nume" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Prenume" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Prenume" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Nume, Prenume FROM dbo.Profesor</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Profesor] SET [Nume] = @Nume, [Prenume] = @Prenume WHERE (([Id] = @Original_Id) AND ([Nume] = @Original_Nume) AND ([Prenume] = @Original_Prenume));
SELECT Id, Nume, Prenume FROM Profesor WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Nume" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Nume" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Prenume" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Prenume" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Nume" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Nume" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Prenume" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Prenume" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="CTIScheduleDB.dbo.Profesor" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Nume" DataSetColumn="Nume" />
              <Mapping SourceColumn="Prenume" DataSetColumn="Prenume" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DisciplinaProfesorDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DisciplinaProfesorDataSet" msprop:Generator_UserDSName="DisciplinaProfesorDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Disciplina" msprop:Generator_TableClassName="DisciplinaDataTable" msprop:Generator_TableVarName="tableDisciplina" msprop:Generator_TablePropName="Disciplina" msprop:Generator_RowDeletingName="DisciplinaRowDeleting" msprop:Generator_RowChangingName="DisciplinaRowChanging" msprop:Generator_RowEvHandlerName="DisciplinaRowChangeEventHandler" msprop:Generator_RowDeletedName="DisciplinaRowDeleted" msprop:Generator_UserTableName="Disciplina" msprop:Generator_RowChangedName="DisciplinaRowChanged" msprop:Generator_RowEvArgName="DisciplinaRowChangeEvent" msprop:Generator_RowClassName="DisciplinaRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="An" msprop:Generator_ColumnVarNameInTable="columnAn" msprop:Generator_ColumnPropNameInRow="An" msprop:Generator_ColumnPropNameInTable="AnColumn" msprop:Generator_UserColumnName="An" type="xs:int" />
              <xs:element name="Nume" msprop:Generator_ColumnVarNameInTable="columnNume" msprop:Generator_ColumnPropNameInRow="Nume" msprop:Generator_ColumnPropNameInTable="NumeColumn" msprop:Generator_UserColumnName="Nume">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Credite" msprop:Generator_ColumnVarNameInTable="columnCredite" msprop:Generator_ColumnPropNameInRow="Credite" msprop:Generator_ColumnPropNameInTable="CrediteColumn" msprop:Generator_UserColumnName="Credite" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DisciplinaProfesor" msprop:Generator_TableClassName="DisciplinaProfesorDataTable" msprop:Generator_TableVarName="tableDisciplinaProfesor" msprop:Generator_TablePropName="DisciplinaProfesor" msprop:Generator_RowDeletingName="DisciplinaProfesorRowDeleting" msprop:Generator_RowChangingName="DisciplinaProfesorRowChanging" msprop:Generator_RowEvHandlerName="DisciplinaProfesorRowChangeEventHandler" msprop:Generator_RowDeletedName="DisciplinaProfesorRowDeleted" msprop:Generator_UserTableName="DisciplinaProfesor" msprop:Generator_RowChangedName="DisciplinaProfesorRowChanged" msprop:Generator_RowEvArgName="DisciplinaProfesorRowChangeEvent" msprop:Generator_RowClassName="DisciplinaProfesorRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id_Disciplina" msprop:Generator_ColumnVarNameInTable="columnId_Disciplina" msprop:Generator_ColumnPropNameInRow="Id_Disciplina" msprop:Generator_ColumnPropNameInTable="Id_DisciplinaColumn" msprop:Generator_UserColumnName="Id_Disciplina" type="xs:int" />
              <xs:element name="Id_Profesor" msprop:Generator_ColumnVarNameInTable="columnId_Profesor" msprop:Generator_ColumnPropNameInRow="Id_Profesor" msprop:Generator_ColumnPropNameInTable="Id_ProfesorColumn" msprop:Generator_UserColumnName="Id_Profesor" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Profesor" msprop:Generator_TableClassName="ProfesorDataTable" msprop:Generator_TableVarName="tableProfesor" msprop:Generator_TablePropName="Profesor" msprop:Generator_RowDeletingName="ProfesorRowDeleting" msprop:Generator_RowChangingName="ProfesorRowChanging" msprop:Generator_RowEvHandlerName="ProfesorRowChangeEventHandler" msprop:Generator_RowDeletedName="ProfesorRowDeleted" msprop:Generator_UserTableName="Profesor" msprop:Generator_RowChangedName="ProfesorRowChanged" msprop:Generator_RowEvArgName="ProfesorRowChangeEvent" msprop:Generator_RowClassName="ProfesorRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Nume" msprop:Generator_ColumnVarNameInTable="columnNume" msprop:Generator_ColumnPropNameInRow="Nume" msprop:Generator_ColumnPropNameInTable="NumeColumn" msprop:Generator_UserColumnName="Nume">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Prenume" msprop:Generator_ColumnVarNameInTable="columnPrenume" msprop:Generator_ColumnPropNameInRow="Prenume" msprop:Generator_ColumnPropNameInTable="PrenumeColumn" msprop:Generator_UserColumnName="Prenume">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Disciplina" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Profesor_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Profesor" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_DisciplinaProfesor_Disciplina" msdata:parent="Disciplina" msdata:child="DisciplinaProfesor" msdata:parentkey="Id" msdata:childkey="Id_Disciplina" msprop:Generator_UserChildTable="DisciplinaProfesor" msprop:Generator_ChildPropName="GetDisciplinaProfesorRows" msprop:Generator_UserRelationName="FK_DisciplinaProfesor_Disciplina" msprop:Generator_ParentPropName="DisciplinaRow" msprop:Generator_RelationVarName="relationFK_DisciplinaProfesor_Disciplina" msprop:Generator_UserParentTable="Disciplina" />
      <msdata:Relationship name="FK_DisciplinaProfesor_Profesor" msdata:parent="Profesor" msdata:child="DisciplinaProfesor" msdata:parentkey="Id" msdata:childkey="Id_Profesor" msprop:Generator_UserChildTable="DisciplinaProfesor" msprop:Generator_ChildPropName="GetDisciplinaProfesorRows" msprop:Generator_UserRelationName="FK_DisciplinaProfesor_Profesor" msprop:Generator_RelationVarName="relationFK_DisciplinaProfesor_Profesor" msprop:Generator_UserParentTable="Profesor" msprop:Generator_ParentPropName="ProfesorRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>